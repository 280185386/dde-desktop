/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -p launcher_interface.h:coplauncher_interface.cpp -c LauncherInterface launcherinterface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef LAUNCHER_INTERFACE_H_1438601608
#define LAUNCHER_INTERFACE_H_1438601608
#include "dbustype.h"
#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

struct ItemInfo
{
    QString m_desktop;
    QString m_name;
    QString m_key;
    QString m_iconKey;
    qlonglong m_categoryId;
    qlonglong m_installedTime;

    friend QDBusArgument &operator<<(QDBusArgument &argument, const ItemInfo &info)
    {
        argument.beginStructure();
        argument << info.m_desktop << info.m_name << info.m_key << info.m_iconKey;
        argument << info.m_categoryId << info.m_installedTime;
        argument.endStructure();

        return argument;
    }

    friend const QDBusArgument &operator>>(const QDBusArgument &argument, ItemInfo &info)
    {
        argument.beginStructure();
        argument >> info.m_desktop >> info.m_name >> info.m_key >> info.m_iconKey;
        argument >> info.m_categoryId >> info.m_installedTime;
        argument.endStructure();

        return argument;
    }
};

Q_DECLARE_METATYPE(ItemInfo)

/*
 * Proxy class for interface com.deepin.dde.daemon.Launcher
 */
class LauncherInterface: public QDBusAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticServiceName()
    { return "com.deepin.dde.daemon.Launcher"; }
    static inline const char *staticPathName()
    { return "/com/deepin/dde/daemon/Launcher"; }
    static inline const char *staticInterfaceName()
    { return "com.deepin.dde.daemon.Launcher"; }

public:
    LauncherInterface(QObject *parent = 0);

    ~LauncherInterface();

Q_SIGNALS: // SIGNALS
    void UninstallSuccess(const QString &in0);
    void ItemChanged(const QString &in0, ItemInfo in1, qlonglong in2);
};

#endif
